# Generated by Django 5.2 on 2025-05-23 16:40

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("app_cicatrizando", "0004_rename_updated_specialists_updated_at_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="CareSite",
            fields=[
                (
                    "care_site_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "care_site_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "care_site_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "place_of_service_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "care_site",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CdmSource",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cdm_source_name", models.CharField(max_length=255)),
                ("cdm_source_abbreviation", models.CharField(max_length=25)),
                ("cdm_holder", models.CharField(max_length=255)),
                ("source_description", models.TextField(blank=True, null=True)),
                (
                    "source_documentation_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "cdm_etl_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("source_release_date", models.DateField()),
                ("cdm_release_date", models.DateField()),
                ("cdm_version", models.CharField(blank=True, max_length=10, null=True)),
                ("vocabulary_version", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "cdm_source",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Cohort",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cohort_definition_id", models.IntegerField()),
                ("subject_id", models.IntegerField()),
                ("cohort_start_date", models.DateField()),
                ("cohort_end_date", models.DateField()),
            ],
            options={
                "db_table": "cohort",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CohortDefinition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cohort_definition_id", models.IntegerField()),
                ("cohort_definition_name", models.CharField(max_length=255)),
                (
                    "cohort_definition_description",
                    models.TextField(blank=True, null=True),
                ),
                ("cohort_definition_syntax", models.TextField(blank=True, null=True)),
                ("cohort_initiation_date", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "cohort_definition",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Concept",
            fields=[
                ("concept_id", models.IntegerField(primary_key=True, serialize=False)),
                ("concept_name", models.CharField(max_length=255)),
                (
                    "standard_concept",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("concept_code", models.CharField(max_length=50)),
                ("valid_start_date", models.DateField()),
                ("valid_end_date", models.DateField()),
                (
                    "invalid_reason",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
            ],
            options={
                "db_table": "concept",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ConceptAncestor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("min_levels_of_separation", models.IntegerField()),
                ("max_levels_of_separation", models.IntegerField()),
            ],
            options={
                "db_table": "concept_ancestor",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ConceptClass",
            fields=[
                (
                    "concept_class_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("concept_class_name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "concept_class",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ConceptRelationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("valid_start_date", models.DateField()),
                ("valid_end_date", models.DateField()),
                (
                    "invalid_reason",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
            ],
            options={
                "db_table": "concept_relationship",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ConceptSynonym",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("concept_synonym_name", models.CharField(max_length=1000)),
            ],
            options={
                "db_table": "concept_synonym",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ConditionEra",
            fields=[
                (
                    "condition_era_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("condition_era_start_date", models.DateField()),
                ("condition_era_end_date", models.DateField()),
                (
                    "condition_occurrence_count",
                    models.IntegerField(blank=True, null=True),
                ),
            ],
            options={
                "db_table": "condition_era",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ConditionOccurrence",
            fields=[
                (
                    "condition_occurrence_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("condition_start_date", models.DateField()),
                (
                    "condition_start_datetime",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("condition_end_date", models.DateField(blank=True, null=True)),
                ("condition_end_datetime", models.DateTimeField(blank=True, null=True)),
                ("stop_reason", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "condition_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "condition_status_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "condition_occurrence",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Cost",
            fields=[
                ("cost_id", models.IntegerField(primary_key=True, serialize=False)),
                ("cost_event_id", models.IntegerField()),
                (
                    "total_charge",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "total_paid",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "paid_by_payer",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "paid_by_patient",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "paid_patient_copay",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "paid_patient_coinsurance",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "paid_patient_deductible",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "paid_by_primary",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "paid_ingredient_cost",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "paid_dispensing_fee",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                ("payer_plan_period_id", models.IntegerField(blank=True, null=True)),
                (
                    "amount_allowed",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "revenue_code_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "drg_source_value",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
            ],
            options={
                "db_table": "cost",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Death",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("death_date", models.DateField()),
                ("death_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "cause_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "death",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DeviceExposure",
            fields=[
                (
                    "device_exposure_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("device_exposure_start_date", models.DateField()),
                (
                    "device_exposure_start_datetime",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("device_exposure_end_date", models.DateField(blank=True, null=True)),
                (
                    "device_exposure_end_datetime",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "unique_device_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "production_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("quantity", models.IntegerField(blank=True, null=True)),
                (
                    "device_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "unit_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "device_exposure",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "domain_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("domain_name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "domain",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DoseEra",
            fields=[
                ("dose_era_id", models.IntegerField(primary_key=True, serialize=False)),
                ("dose_value", models.DecimalField(decimal_places=5, max_digits=10)),
                ("dose_era_start_date", models.DateField()),
                ("dose_era_end_date", models.DateField()),
            ],
            options={
                "db_table": "dose_era",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrugEra",
            fields=[
                ("drug_era_id", models.IntegerField(primary_key=True, serialize=False)),
                ("drug_era_start_date", models.DateField()),
                ("drug_era_end_date", models.DateField()),
                ("drug_exposure_count", models.IntegerField(blank=True, null=True)),
                ("gap_days", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "drug_era",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrugExposure",
            fields=[
                (
                    "drug_exposure_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("drug_exposure_start_date", models.DateField()),
                (
                    "drug_exposure_start_datetime",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("drug_exposure_end_date", models.DateField()),
                (
                    "drug_exposure_end_datetime",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("verbatim_end_date", models.DateField(blank=True, null=True)),
                ("stop_reason", models.CharField(blank=True, max_length=20, null=True)),
                ("refills", models.IntegerField(blank=True, null=True)),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                ("days_supply", models.IntegerField(blank=True, null=True)),
                ("sig", models.TextField(blank=True, null=True)),
                ("lot_number", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "drug_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "route_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "dose_unit_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "drug_exposure",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrugStrength",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "numerator_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "denominator_value",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                ("box_size", models.IntegerField(blank=True, null=True)),
                ("valid_start_date", models.DateField()),
                ("valid_end_date", models.DateField()),
                (
                    "invalid_reason",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
            ],
            options={
                "db_table": "drug_strength",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Episode",
            fields=[
                ("episode_id", models.IntegerField(primary_key=True, serialize=False)),
                ("episode_start_date", models.DateField()),
                ("episode_start_datetime", models.DateTimeField(blank=True, null=True)),
                ("episode_end_date", models.DateField(blank=True, null=True)),
                ("episode_end_datetime", models.DateTimeField(blank=True, null=True)),
                ("episode_parent_id", models.IntegerField(blank=True, null=True)),
                ("episode_number", models.IntegerField(blank=True, null=True)),
                (
                    "episode_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "episode",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EpisodeEvent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.IntegerField()),
            ],
            options={
                "db_table": "episode_event",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FactRelationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fact_id_1", models.IntegerField()),
                ("fact_id_2", models.IntegerField()),
            ],
            options={
                "db_table": "fact_relationship",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                ("location_id", models.IntegerField(primary_key=True, serialize=False)),
                ("address_1", models.CharField(blank=True, max_length=50, null=True)),
                ("address_2", models.CharField(blank=True, max_length=50, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("state", models.CharField(blank=True, max_length=2, null=True)),
                ("zip", models.CharField(blank=True, max_length=9, null=True)),
                ("county", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "location_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "country_source_value",
                    models.CharField(blank=True, max_length=80, null=True),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
            ],
            options={
                "db_table": "location",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                (
                    "measurement_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("measurement_date", models.DateField()),
                ("measurement_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "measurement_time",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "value_as_number",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "range_low",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "range_high",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "measurement_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "unit_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "value_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("measurement_event_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "measurement",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Metadata",
            fields=[
                ("metadata_id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=250)),
                (
                    "value_as_string",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "value_as_number",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                ("metadata_date", models.DateField(blank=True, null=True)),
                ("metadata_datetime", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "metadata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                ("note_id", models.IntegerField(primary_key=True, serialize=False)),
                ("note_date", models.DateField()),
                ("note_datetime", models.DateTimeField(blank=True, null=True)),
                ("note_title", models.CharField(blank=True, max_length=250, null=True)),
                ("note_text", models.TextField()),
                (
                    "note_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("note_event_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "note",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NoteNlp",
            fields=[
                ("note_nlp_id", models.IntegerField(primary_key=True, serialize=False)),
                ("note_id", models.IntegerField()),
                ("snippet", models.CharField(blank=True, max_length=250, null=True)),
                ("offset", models.CharField(blank=True, max_length=50, null=True)),
                ("lexical_variant", models.CharField(max_length=250)),
                ("nlp_system", models.CharField(blank=True, max_length=250, null=True)),
                ("nlp_date", models.DateField()),
                ("nlp_datetime", models.DateTimeField(blank=True, null=True)),
                ("term_exists", models.CharField(blank=True, max_length=1, null=True)),
                (
                    "term_temporal",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "term_modifiers",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
            ],
            options={
                "db_table": "note_nlp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Observation",
            fields=[
                (
                    "observation_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("observation_date", models.DateField()),
                ("observation_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "value_as_number",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "value_as_string",
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                (
                    "observation_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "unit_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "qualifier_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "value_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("observation_event_id", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "observation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ObservationPeriod",
            fields=[
                (
                    "observation_period_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("observation_period_start_date", models.DateField()),
                ("observation_period_end_date", models.DateField()),
            ],
            options={
                "db_table": "observation_period",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PayerPlanPeriod",
            fields=[
                (
                    "payer_plan_period_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("payer_plan_period_start_date", models.DateField()),
                ("payer_plan_period_end_date", models.DateField()),
                (
                    "payer_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "plan_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "sponsor_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "family_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "stop_reason_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "payer_plan_period",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("person_id", models.IntegerField(primary_key=True, serialize=False)),
                ("year_of_birth", models.IntegerField()),
                ("month_of_birth", models.IntegerField(blank=True, null=True)),
                ("day_of_birth", models.IntegerField(blank=True, null=True)),
                ("birth_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "person_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "gender_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "race_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "ethnicity_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "person",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProcedureOccurrence",
            fields=[
                (
                    "procedure_occurrence_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("procedure_date", models.DateField()),
                ("procedure_datetime", models.DateTimeField(blank=True, null=True)),
                ("procedure_end_date", models.DateField(blank=True, null=True)),
                ("procedure_end_datetime", models.DateTimeField(blank=True, null=True)),
                ("quantity", models.IntegerField(blank=True, null=True)),
                (
                    "procedure_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "modifier_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "procedure_occurrence",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                ("provider_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "provider_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("npi", models.CharField(blank=True, max_length=20, null=True)),
                ("dea", models.CharField(blank=True, max_length=20, null=True)),
                ("year_of_birth", models.IntegerField(blank=True, null=True)),
                (
                    "provider_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "specialty_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "gender_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "provider",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Relationship",
            fields=[
                (
                    "relationship_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("relationship_name", models.CharField(max_length=255)),
                ("is_hierarchical", models.CharField(max_length=1)),
                ("defines_ancestry", models.CharField(max_length=1)),
                ("reverse_relationship_id", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "relationship",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SourceToConceptMap",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("source_code", models.CharField(max_length=50)),
                ("source_vocabulary_id", models.CharField(max_length=20)),
                (
                    "source_code_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("valid_start_date", models.DateField()),
                ("valid_end_date", models.DateField()),
                (
                    "invalid_reason",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
            ],
            options={
                "db_table": "source_to_concept_map",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Specimen",
            fields=[
                ("specimen_id", models.IntegerField(primary_key=True, serialize=False)),
                ("specimen_date", models.DateField()),
                ("specimen_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "quantity",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "specimen_source_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "specimen_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "unit_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "anatomic_site_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "disease_status_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "specimen",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VisitDetail",
            fields=[
                (
                    "visit_detail_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("visit_detail_start_date", models.DateField()),
                (
                    "visit_detail_start_datetime",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("visit_detail_end_date", models.DateField()),
                (
                    "visit_detail_end_datetime",
                    models.DateTimeField(blank=True, null=True),
                ),
                (
                    "visit_detail_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "admitted_from_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "discharged_to_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "visit_detail",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VisitOccurrence",
            fields=[
                (
                    "visit_occurrence_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("visit_start_date", models.DateField()),
                ("visit_start_datetime", models.DateTimeField(blank=True, null=True)),
                ("visit_end_date", models.DateField()),
                ("visit_end_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "visit_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "admitted_from_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "discharged_to_source_value",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "visit_occurrence",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Vocabulary",
            fields=[
                (
                    "vocabulary_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("vocabulary_name", models.CharField(max_length=255)),
                (
                    "vocabulary_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "vocabulary_version",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
            ],
            options={
                "db_table": "vocabulary",
                "managed": False,
            },
        ),
    ]
