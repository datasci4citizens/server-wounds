# Generated by Django 5.2 on 2025-06-05 20:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "__first__"),
    ]

    operations = [
        migrations.CreateModel(
            name="Concept",
            fields=[
                ("concept_id", models.IntegerField(primary_key=True, serialize=False)),
                ("concept_name", models.CharField(max_length=255)),
                (
                    "standard_concept",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("concept_code", models.CharField(max_length=50, null=True)),
                ("valid_start_date", models.DateField(null=True)),
                ("valid_end_date", models.DateField(null=True)),
                (
                    "invalid_reason",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
            ],
            options={
                "db_table": "concept",
            },
        ),
        migrations.CreateModel(
            name="ConceptClass",
            fields=[
                (
                    "concept_class_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("concept_class_name", models.CharField(max_length=255)),
                (
                    "concept_class_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "concept_class",
            },
        ),
        migrations.AddField(
            model_name="concept",
            name="concept_class",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_cicatrizando.conceptclass",
            ),
        ),
        migrations.CreateModel(
            name="ConceptSynonym",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("concept_synonym_name", models.CharField(max_length=1000)),
                (
                    "concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "language_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="conceptsynonym_language_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "concept_synonym",
            },
        ),
        migrations.CreateModel(
            name="Domain",
            fields=[
                (
                    "domain_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("domain_name", models.CharField(max_length=255)),
                (
                    "domain_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="domain_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "domain",
            },
        ),
        migrations.AddField(
            model_name="concept",
            name="domain",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_cicatrizando.domain",
            ),
        ),
        migrations.CreateModel(
            name="FactRelationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fact_id_1", models.IntegerField()),
                ("fact_id_2", models.IntegerField()),
                (
                    "domain_concept_id_1",
                    models.ForeignKey(
                        db_column="domain_concept_id_1",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "domain_concept_id_2",
                    models.ForeignKey(
                        db_column="domain_concept_id_2",
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="factrelationship_domain_concept_id_2_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "relationship_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="factrelationship_relationship_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "fact_relationship",
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                ("location_id", models.IntegerField(primary_key=True, serialize=False)),
                ("address_1", models.CharField(blank=True, max_length=50, null=True)),
                ("address_2", models.CharField(blank=True, max_length=50, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("state", models.CharField(blank=True, max_length=2, null=True)),
                ("zip", models.CharField(blank=True, max_length=9, null=True)),
                ("county", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "country_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "location",
            },
        ),
        migrations.CreateModel(
            name="CareSite",
            fields=[
                (
                    "care_site_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                (
                    "care_site_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "place_of_service_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.location",
                    ),
                ),
            ],
            options={
                "db_table": "care_site",
            },
        ),
        migrations.CreateModel(
            name="Person",
            fields=[
                ("person_id", models.IntegerField(primary_key=True, serialize=False)),
                ("year_of_birth", models.IntegerField()),
                ("birth_datetime", models.DateTimeField(blank=True, null=True)),
                ("person_care_site_registration", models.CharField()),
                (
                    "care_site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.caresite",
                    ),
                ),
                (
                    "ethnicity_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="person_ethnicity_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "gender_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.location",
                    ),
                ),
                (
                    "person_user_id",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "race_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="person_race_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "person",
            },
        ),
        migrations.CreateModel(
            name="PatientNonClinicalInfos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("accept_tcl", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.person",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ObservationPeriod",
            fields=[
                (
                    "observation_period_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("observation_period_start_date", models.DateField()),
                ("observation_period_end_date", models.DateField()),
                (
                    "period_type_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.person",
                    ),
                ),
            ],
            options={
                "db_table": "observation_period",
            },
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                ("provider_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "provider_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("npi", models.CharField(blank=True, max_length=20, null=True)),
                ("dea", models.CharField(blank=True, max_length=20, null=True)),
                ("provider_birthday", models.DateField(null=True)),
                (
                    "care_site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.caresite",
                    ),
                ),
                (
                    "gender_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="provider_gender_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "provider_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "specialty_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "provider",
            },
        ),
        migrations.AddField(
            model_name="person",
            name="provider",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_cicatrizando.provider",
            ),
        ),
        migrations.CreateModel(
            name="Relationship",
            fields=[
                (
                    "relationship_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("relationship_name", models.CharField(max_length=255)),
                ("is_hierarchical", models.CharField(max_length=1)),
                ("defines_ancestry", models.CharField(max_length=1)),
                ("reverse_relationship_id", models.CharField(max_length=20)),
                (
                    "relationship_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "relationship",
            },
        ),
        migrations.CreateModel(
            name="SpecialistNonOmopInfos",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "provider",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.provider",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VisitOccurrence",
            fields=[
                (
                    "visit_occurrence_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("visit_start_date", models.DateField()),
                ("visit_start_datetime", models.DateTimeField(blank=True, null=True)),
                ("visit_end_date", models.DateField()),
                ("visit_end_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "admitted_from_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="visitoccurrence_admitted_from_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "care_site",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.caresite",
                    ),
                ),
                (
                    "discharged_to_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="visitoccurrence_discharged_to_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.person",
                    ),
                ),
                (
                    "preceding_visit_occurrence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.visitoccurrence",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.provider",
                    ),
                ),
                (
                    "visit_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "visit_type_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="visitoccurrence_visit_type_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "visit_occurrence",
            },
        ),
        migrations.CreateModel(
            name="ProcedureOccurrence",
            fields=[
                (
                    "procedure_occurrence_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("procedure_date", models.DateField()),
                ("procedure_datetime", models.DateTimeField(blank=True, null=True)),
                ("procedure_end_date", models.DateField(blank=True, null=True)),
                ("procedure_end_datetime", models.DateTimeField(blank=True, null=True)),
                ("quantity", models.IntegerField(blank=True, null=True)),
                (
                    "modifier_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="procedureoccurrence_modifier_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.person",
                    ),
                ),
                (
                    "procedure_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "procedure_type_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="procedureoccurrence_procedure_type_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.provider",
                    ),
                ),
                (
                    "visit_occurrence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.visitoccurrence",
                    ),
                ),
            ],
            options={
                "db_table": "procedure_occurrence",
            },
        ),
        migrations.CreateModel(
            name="Observation",
            fields=[
                ("observation_id", models.AutoField(primary_key=True, serialize=False)),
                ("observation_date", models.DateField()),
                ("observation_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "value_as_number",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "value_as_string",
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                ("observation_event_id", models.IntegerField(blank=True, null=True)),
                (
                    "obs_event_field_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="observation_obs_event_field_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "observation_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "observation_type_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="observation_observation_type_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "qualifier_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="observation_qualifier_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "unit_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="observation_unit_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "value_as_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="observation_value_as_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.person",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.provider",
                    ),
                ),
                (
                    "visit_occurrence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.visitoccurrence",
                    ),
                ),
            ],
            options={
                "db_table": "observation",
            },
        ),
        migrations.CreateModel(
            name="Note",
            fields=[
                ("note_id", models.AutoField(primary_key=True, serialize=False)),
                ("note_date", models.DateField()),
                ("note_datetime", models.DateTimeField(blank=True, null=True)),
                ("note_title", models.CharField(blank=True, max_length=250, null=True)),
                ("note_text", models.TextField()),
                ("note_event_id", models.IntegerField(blank=True, null=True)),
                (
                    "encoding_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="note_encoding_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "language_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="note_language_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "note_class_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="note_note_class_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "note_event_field_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="note_note_event_field_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "note_type_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.person",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.provider",
                    ),
                ),
                (
                    "visit_occurrence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.visitoccurrence",
                    ),
                ),
            ],
            options={
                "db_table": "note",
            },
        ),
        migrations.CreateModel(
            name="Measurement",
            fields=[
                ("measurement_id", models.AutoField(primary_key=True, serialize=False)),
                ("measurement_date", models.DateField()),
                ("measurement_datetime", models.DateTimeField(blank=True, null=True)),
                (
                    "measurement_time",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "value_as_number",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "range_low",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                (
                    "range_high",
                    models.DecimalField(
                        blank=True, decimal_places=5, max_digits=10, null=True
                    ),
                ),
                ("measurement_event_id", models.IntegerField(blank=True, null=True)),
                (
                    "meas_event_field_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="measurement_meas_event_field_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "measurement_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "measurement_type_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="measurement_measurement_type_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "operator_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="measurement_operator_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "unit_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="measurement_unit_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "value_as_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="measurement_value_as_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.person",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.provider",
                    ),
                ),
                (
                    "visit_occurrence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.visitoccurrence",
                    ),
                ),
            ],
            options={
                "db_table": "measurement",
            },
        ),
        migrations.CreateModel(
            name="ConditionOccurrence",
            fields=[
                (
                    "condition_occurrence_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("condition_start_date", models.DateField()),
                (
                    "condition_start_datetime",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("condition_end_date", models.DateField(blank=True, null=True)),
                ("condition_end_datetime", models.DateTimeField(blank=True, null=True)),
                ("stop_reason", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "condition_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "condition_status_concept",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="conditionoccurrence_condition_status_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "condition_type_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="conditionoccurrence_condition_type_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
                (
                    "person",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.person",
                    ),
                ),
                (
                    "provider",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.provider",
                    ),
                ),
                (
                    "visit_occurrence",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        to="app_cicatrizando.visitoccurrence",
                    ),
                ),
            ],
            options={
                "db_table": "condition_occurrence",
            },
        ),
        migrations.CreateModel(
            name="Vocabulary",
            fields=[
                (
                    "vocabulary_id",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("vocabulary_name", models.CharField(max_length=255)),
                (
                    "vocabulary_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "vocabulary_version",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "vocabulary_concept",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="vocabulary_concept_set",
                        to="app_cicatrizando.concept",
                    ),
                ),
            ],
            options={
                "db_table": "vocabulary",
            },
        ),
        migrations.AddField(
            model_name="concept",
            name="vocabulary",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.DO_NOTHING,
                to="app_cicatrizando.vocabulary",
            ),
        ),
        migrations.AlterField(
            model_name="person",
            name="person_care_site_registration",
            field=models.CharField(null=True),
        ),
        migrations.AlterField(
            model_name="person",
            name="person_id",
            field=models.AutoField(primary_key=True, serialize=False),
        ),
    ]
